@model SistemaRepuesto.Models.SubMenu

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card o-hidden border-0 shadow-lg my-5">
        <h5 class="card-header bg-primary text-white">
            <div class="col-auto float-right">
                <i class="fas fa-edit fa-1x text-gray-300"></i>
            </div>
            Editar Sub-Menu
        </h5>

        <div class="card-body p-5">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SubID)

                <div class="form-group">
                    @Html.LabelFor(model => model.SubDescripcion, "Sub-Menu", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubDescripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubDescripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubController, "Controller", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubController, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubController, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubAction, "Action View", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubAction, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubAction, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubMenuID, "Opcion Menu", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubMenuID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubMenuID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubRoleID, "Role de Usuario", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubRoleID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubRoleID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary btn-block" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink(" Back to List", "Index", null, new { @class = "fa fa-home" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
